<?php
    $a = [5, 5, 7, 2, 3, 7, 0];
    print_r($a); // выводим массив
    echo '<br/>';
    $a = array_unique($a); // функция удаляет из массива все повторяющиеся элементы, и возвращает новый массив (сохраняет значение индексов элементов)
    print_r($a); // выводим массив
    echo '<br/>';

    shuffle($a); // перемешивает значения в массиве, возвращает true или false (так же перемешивает ключи значений)
    echo '<br/>';

    print_r($a);
    echo '<br/>';

    print_r(array_reverse($a)); // переворачивает массив задом наперед
    echo '<br/>';

    print_r(array_flip($a)); // меняет местами ключи с значениями и возвращает новый массив
    echo '<br/>';

    $a = ['name' => 'Igor', 'age' => '26'];

    print_r(array_values($a)); // возвращает все значения массива в виде массива (без ключей)
    echo '<br/>';

    print_r(array_keys($a)); // возвращает все ключи массива в виде массива (без значений)
    echo '<br/>';

    $list_1 = [5, 7, 8];
    $list_2 = [10, 8, 20];

    $list = $list_1 + $list_2; //останется только первый массив т.к. ключи массивов одинаковые
    print_r($list);
    echo '<br/>';

    $list = array_merge($list_1, $list_2); // складывает массивы и возвращает полученный массив
    print_r($list);
    echo '<br/>';

    $list = range(1, 100); // создает список (массив) с числами от 1 до 100
    print_r($list);
    echo '<br/>';

    $list = array_slice($list, 10, 5); // возвращает часть массива переданного в первом значении, во втором указываем индекс с которого берем кусок массива, третий сколько значений берем (если не указывать 3 параметр то берем до конца массива)
    print_r($list);
    echo '<br/>';

    sort($list); // сортирует массив по возрастанию (у значений меняются индексы, тоесть подходит только для списков)
    print_r($list);
    echo '<br/>';

    rsort($list); // сортирует массив по убыванию (у значений меняются индексы, тоесть подходит только для списков)
    print_r($list);
    echo '<br/>';

    $list = ['1' => 5, '2' => 0, '4' => 10, 'name' => 12]; // ассациативный массив (ключ => значение)

    asort($list); // сортирует массив по возрастанию значений при этом сохраняет ключи, при этом возвращает true или false, при этом меняет сам переданный в неё массив
    print_r($list);
    echo '<br/>';

    arsort($list); // сортирует массив по убыванию значений при этом сохраняет ключи, при этом возвращает true или false, при этом меняет сам переданный в неё массив
    print_r($list);
    echo '<br/>';

    function mySort ($a, $b) {
        if ($a % 10 == 0 && $b % 10 != 0) return 1; // функция сортирует, сначала числа не кратные 10, затем кратные 10
        if ($a % 10 != 0 && $b % 10 == 0) return -1;
        return $a <=> $b;
    }

    $list = [30, 40, 25, 20, 12, 15, 50, 40];

    uasort($list, 'mySort'); // сортирует массив по заданной функции в параметре сохраняя ключи

    print_r($list); 
?>