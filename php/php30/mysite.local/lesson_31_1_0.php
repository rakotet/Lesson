<?php
  // Ошибки делятся на различные уровни, отображение которых можно включат ьи выключать

  // E_ERROR - его код 1, это ошибки которые прерывают выполнение скрипта
  // E_WARNING - его код 2, эти ошибки не прерывают выполнение скрипта
  // E_PARSE - его код 4, ошибки при парсенге, например забытая ; 
  // E_NOTICE - его код 8, уведомления, не прерывают работу скрипта
  // E_CORE_ERROR - его код 16, возникают до запуска скрипта еще при компиляции
  // E_CORE_WARNING - его код 32
  // E_COMPILE_ERROR - код 64 ошибки при компиляции
  // E_COMPILE_WARNING - код 128
  // E_USER_ERROR - код 256, ошибки пользователя 
  // E_USER_WARNING - код 512
  // E_USER_NOTICE - код 1024
  // E_STRICT - код 2048, полезные советы от php
  // E_RECOVERABLE_ERROR - код 4096, серьезные ошибки которые могут завершить скрипт, но их можно перехватить и обратобать и скрипт не завершится 
  // E_DEPRECATED - код 8192, уведомление об устаревших конструкциях языка
  // E_USER_DEPRECATED - код 16384
  // E_ALL - код 32764, все ошибки вместе взятые

  error_reporting(E_ALL & ~E_NOTICE); // ф-я включает ошибки описанные выше, в данном случае включить все ошибки E_ALL кроме E_NOTICE
  // Ф-ю error_reporting(число) можно делать проще, число - это сумма нужных нам кодов ошибок выше перечисленных 

  error_reporting(E_ALL); // при разработе проэктов нужно всегда ставить только E_ALL, что бы видеть все ошибки
  
  ini_set('display_errors', 0); // ф-я полностью выключает отображение любых ошибок на странице, но ошибки продолжают записывать в лог файл php (можно посмотреть путь в ini.php), нужно делать когда проэкт завершен, что бы пользователи не видели ни каких ошибок


?>