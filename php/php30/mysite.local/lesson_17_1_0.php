<?php
  $s_1 = 'Hello World!';
  $s_2 = 'Привет, мир!';

  echo "s_1 = $s_1<br /> s_2 = $s_2<br />";
  echo $s_1[1].'<br />';
  echo $s_2[1].'<br />'; // будет буказябка т.к. кирилица занимает два байта вместо одного

  echo strlen($s_1).'<br />'; // ф-я возвращает какое количество байт занимает строка
  echo strlen($s_2).'<br />';

  echo mb_strlen($s_1).'<br />'; // приставка mb_ вызывает ф-и из этой библиотеки, они служат для корректной работы с кирилицей 
  echo mb_strlen($s_2).'<br />';

  echo '--------<br />';

  echo strpos($s_1, 'or').'<br />'; // ф-я возвращает индекс искомой подстроки переданной во втором аргументе, если такой нет вернет false

  if(strpos($s_1, 'Hello') !== false) echo 'Подстрока найдена'; // необходимо проверять на не эквивалентность false т.к. индекс Hello (или любое начало строки) равен нулю а это false
  else 'Подстрока не найдена';

  echo '<br />--------<br />';

  echo str_contains($s_1, 'Hello').'<br />'; // ф-я возвращает true если подстрока найдена или false если нет

  echo str_starts_with($s_1, 'Hello').'<br />'; // ф-я возвращает true если строка назинается с заданной подстроки, если нет то false

  echo str_ends_with($s_1, 'ld!').'<br />'; // заканчивается ли строка заданной подстрокой

  echo '<br />--------<br />';

  echo substr($s_1, 3, 2).'<br />'; // возвращает подстроку с заданного индекса (первый аргумент) и колличество символов (второй аргумент)
  echo substr($s_1, 3).'<br />'; // если не указывать второй параметр то берется вся строка с заданного индекса
  echo substr($s_1, -3).'<br />'; // берем три символа с конца
  echo substr($s_1, 0, -2).'<br />'; // обрезаем два последних символа строки
  echo mb_substr($s_2, 3).'<br />'; // для работы с кирилицей используем ф-и с приставкой mb_ 

  // Лучше всегда использовать ф-и для работы со строками с приставкой mb_ т.к. они работают хорошо с любыми языками

  echo '<br />--------<br />';

  echo str_replace('и', 'е', $s_2).'<br />'; // какую подстроку меняем на какую в какой строке, работает с кирилицей
  echo str_replace('и', 'е', $s_2, $count).'<br />'; // последний необязательынй параметр в него записывается количество замен подстрок после выполнения ф-ии
  echo $count.'<br />';

  // пример использования

  $text = 'Здравствуйте %name%, у вас новое сообщение на сайте %site%! <br />';
  echo str_replace(['%name%', '%site%'], ['Михаил', 'google.com'], $text).'<br />'; // может принимать массивы значений если значений для поиска и замены больше чем одно

  echo '<br />--------<br />';

  echo strtoupper($s_1).'<br />'; // возвращает строку в верхнем регистре
  echo mb_strtoupper($s_2).'<br />';

  echo strtolower($s_1).'<br />'; // возвращает строку внижнем регистре
  echo mb_strtolower($s_2).'<br />';

  $email = '     mymail@mysite.local     ';

  echo trim($email).'<br />'; // ф-я убирает все пробелы из начала и конца строки

  echo '<br />--------<br />';

  echo '<a href="lesson_17_1_0.php?a='.urlencode('1 2 3 (4, 5, 6)').'">Ссылка</a> <br />'; // если в запросе в значении переменных есть пробелы скобки и т.д. то необходимо использовать ф-ю urlencode
  echo urldecode('1+2+3+%284%2C+5%2C+6%29').'<br />'; // обратная ф-я декодирует даныне из запроса

  echo '<br />--------<br />';

  $s_3 = '<a href="http://mysite.local">Ссылка</a><img>"\' &';
  echo $s_3.'<br />';
  echo htmlspecialchars($s_3).'<br />'; // ф-я обезопасивает переданный html от уезвимостей и вредоносного кода злоумышненников
  echo strip_tags($s_3).'<br />'; // ф-я удаляет все html теги из строки, служит тоже для безопасности от злоумышленников
  echo strip_tags($s_3, '<img><a>').'<br />'; // второй параметр отмечает какие теги нужно оставить в строке

  echo '<br />--------<br />';

  echo md5($s_3).'<br />'; // ф-я хеширует строку (для записи ёё хеша в базу данных например для паролей, для безопасности)

  echo '<br />--------<br />';

  echo uniqid().'<br />'; // генерирует случайную уникальную строку

  echo '<br />--------<br />';

  $str = 'Это очень большой текст, который неплохо было бы разбить на несколько строк';

  echo $str.'<br />';

  echo wordwrap($str, 30, '<br />').'<br />'; // ф-я разбивает строку на подстроки на заданное количество символов в первом аргументе, второй аргумент разделитель этих строк не обязательный параметр
  echo wordwrap($str, 30).'<br />'; 

  echo nl2br(wordwrap($str, 30)).'<br />'; // заменяет все \n на <br />

  echo '<br />--------<br />';

  $m_1 = '53';
  $m_2 = '75.43';

  echo sprintf('%.2f и еще %b', $m_1, 7).'<br />'; // ф-я преобразует числовую строку строку, %.2f сколько оставить знаков после запятой, %b меняется на третий аргумент но в двоичной системе
  echo sprintf('%.3f', $m_2); // чаще используется просто для оставления нужного колличество знаков после запятой
?>

